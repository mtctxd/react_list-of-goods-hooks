{"version":3,"sources":["Components/GoodsList/GoodsList.tsx","Components/GoodsListSelect/GoodsLIstSelect.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","GoodsListSelect","selectSize","filterBy","filterLength","values","Array","fill","_item","i","index","value","name","onChange","target","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","sortBy","setSortBy","setFilterLength","goodsCopy","filter","item","length","sort","good1","good2","localeCompare","reverse","className","type","onClick","action","Number","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BACGA,GADMA,SCFJC,EAAmC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aACjEC,EAASC,MAAMJ,GAClBK,KAAK,IACLR,KAAI,SAACS,EAAOC,GACX,IAAMC,EAAQD,EAAI,EAElB,OACE,wBAEEE,MAAOD,EAFT,SAIGA,GAHIA,MAQb,OACE,yBACEE,KAAK,SACLD,MAAOP,EACPS,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBX,EAASW,EAAOH,QAH5C,UAKE,wBAEEA,MAAO,EAFT,0BACO,GAKNN,MC/BDU,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkGaC,EA/FO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,WAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwCN,mBAAS,GAAjD,mBAAOb,EAAP,KAAqBoB,EAArB,KA4BIC,EAAS,UAAOV,GAuBpB,OArBIX,EAAe,IACjBqB,EAAYA,EAAUC,QAAO,SAACC,GAAD,OAAkBA,EAAKC,QAAUxB,MAGhEqB,EAAUI,MAAK,SAACC,EAAeC,GAC7B,OAAQT,GACN,IAAK,UACH,OAAOQ,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITR,GACFK,EAAUQ,UAIV,sBAAKC,UAAU,MAAf,UACE,wCACEhB,GAEA,wBAAQiB,KAAK,SAASC,QAtDJ,WACtBjB,GAAcD,IAqDV,mBAIDA,GAEG,qCACE,wBAAQiB,KAAK,SAASC,QAzDP,WACvBf,GAAeD,IAwDP,qBAGA,wBAAQe,KAAK,SAASC,QAxDL,WACzBb,EAAU,YAuDF,iCAGA,wBAAQY,KAAK,SAASC,QAvDX,WACnBb,EAAU,WAsDF,4BAGA,wBAAQY,KAAK,SAASC,QAtDd,WAChBf,GAAc,GACdE,EAAU,WACVC,EAAgB,IAmDR,mBAGA,sBAAMa,OAAO,MAAb,SACE,cAAC,EAAD,CACEnC,WAAYa,EAAgBa,OAC5BzB,SAtDS,SAACQ,GACtBa,EAAgBc,OAAO3B,KAsDXP,aAAcA,MAGlB,cAAC,EAAD,CACEN,MAAO2B,WCtGrBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.b763c45a.chunk.js","sourcesContent":["import React from 'react';\n\nexport type Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good: string) => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  selectSize: number,\n  filterLength: number,\n  filterBy: (value: string) => void,\n};\n\nexport const GoodsListSelect: React.FC<Props> = ({ selectSize, filterBy, filterLength }) => {\n  const values = Array(selectSize)\n    .fill('')\n    .map((_item, i) => {\n      const index = i + 1;\n\n      return (\n        <option\n          key={index}\n          value={index}\n        >\n          {index}\n        </option>\n      );\n    });\n\n  return (\n    <select\n      name=\"select\"\n      value={filterLength}\n      onChange={({ target }) => filterBy(target.value)}\n    >\n      <option\n        key={0}\n        value={0}\n      >\n        Select length\n      </option>\n      {values}\n    </select>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './Components/GoodsList/GoodsList';\nimport { GoodsListSelect } from './Components/GoodsListSelect/GoodsLIstSelect';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('default');\n  const [filterLength, setFilterLength] = useState(0);\n\n  const toggleListStart = () => {\n    setIsStarted(!isStarted);\n  };\n\n  const makeListReversed = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortAlphabetically = () => {\n    setSortBy('letters');\n  };\n\n  const sortByLength = () => {\n    setSortBy('length');\n  };\n\n  const resetList = () => {\n    setIsReversed(false);\n    setSortBy('default');\n    setFilterLength(0);\n  };\n\n  const filterByLength = (value: string) => {\n    setFilterLength(Number(value));\n  };\n\n  let goodsCopy = [...goodsFromServer];\n\n  if (filterLength > 0) {\n    goodsCopy = goodsCopy.filter((item: string) => item.length <= filterLength);\n  }\n\n  goodsCopy.sort((good1: string, good2: string) => {\n    switch (sortBy) {\n      case 'letters':\n        return good1.localeCompare(good2);\n\n      case 'length':\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!isStarted\n      && (\n        <button type=\"button\" onClick={toggleListStart}>\n          Start\n        </button>\n      )}\n      {isStarted\n        && (\n          <>\n            <button type=\"button\" onClick={makeListReversed}>\n              Reverse\n            </button>\n            <button type=\"button\" onClick={sortAlphabetically}>\n              Sort alphabetically\n            </button>\n            <button type=\"button\" onClick={sortByLength}>\n              Sort by length\n            </button>\n            <button type=\"button\" onClick={resetList}>\n              reset\n            </button>\n            <form action=\"get\">\n              <GoodsListSelect\n                selectSize={goodsFromServer.length}\n                filterBy={filterByLength}\n                filterLength={filterLength}\n              />\n            </form>\n            <GoodsList\n              goods={goodsCopy}\n            />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}