{"version":3,"sources":["Components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","reversed","sortBy","length","goodsCopy","filter","item","sort","item1","item2","localeCompare","reverse","goodsItems","map","goodsFromServer","App","useState","startList","setListVisibility","reverseList","setListOrder","setSortMethod","setLength","filterByLength","event","target","value","className","type","onClick","current","action","selectSize","options","Array","i","name","id","onChange","seletct","ReactDOM","render","document","getElementById"],"mappings":"iOASaA,EAA6B,SAAC,GAEpC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,SAAUC,EACb,EADaA,OAAQC,EACrB,EADqBA,OAErBC,EAAS,YAAOJ,GAEL,YAAXG,IACFC,EAAYA,EAAUC,QAAO,SAACC,GAAD,OAAkBA,EAAKH,QAAUA,MAGhEC,EAAUG,MAAK,SAACC,EAAeC,GAC7B,OAAQP,GACN,IAAK,UACH,OAAOM,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAML,OAASM,EAAMN,OAE9B,QACE,OAAO,OAII,IAAbF,GACFG,EAAUO,UAGZ,IAAMC,EAAaR,EAAUS,KAAI,SAACP,GAAD,OAC/B,6BACGA,GADMA,MAKX,OACE,6BACGM,KCvCDE,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoGaC,EAjGO,WACpB,MAAuCC,oBAAS,GAAhD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgCJ,mBAAS,WAAzC,mBAAOd,EAAP,KAAemB,EAAf,KACA,EAA4BL,mBAAS,WAArC,mBAAOb,EAAP,KAAemB,EAAf,KAwBMC,EAAiB,SAACC,GAGtBF,EAAUE,EAAMC,OAAOC,QAyBzB,OACE,sBAAKC,UAAU,MAAf,UACE,wCACEV,GAEA,wBAAQW,KAAK,SAASC,QAvDX,WACfX,GAAkB,SAAAY,GAAO,OAAKA,MAsD1B,mBAIDb,GAEG,qCACE,wBAAQW,KAAK,SAASC,QA1DP,WACvBT,GAAa,SAAAU,GAAO,OAAKA,MAyDjB,qBAGA,wBAAQF,KAAK,SAASC,QAzDL,WACzBR,EAAc,YAwDN,iCAGA,wBAAQO,KAAK,SAASC,QAxDX,WACnBR,EAAc,WAuDN,4BAGA,wBAAQO,KAAK,SAASC,QAvDd,WAChBT,GAAa,GACbC,EAAc,WACdC,EAAU,YAoDF,mBAGA,uBAAMS,OAAO,MAAb,mCAEG,IAhDG,SAACC,GAGf,IAFA,IAAMC,EAAUC,MAAMF,GAEbG,EAAI,EAAGA,GAAKH,EAAYG,GAAK,EACpCF,EAAQE,EAAI,GACV,wBAAgBT,MAAOS,EAAvB,SACGA,GADUA,GAMjB,OACE,wBACEC,KAAK,SACLC,GAAG,SACHC,SAAUf,EAHZ,SAKGU,IAgCMM,CAAQ,OAEX,cAAC,EAAD,CACEvC,MAAOc,EACPb,SAAUkB,EACVjB,OAAQA,EACRC,OAAQA,WCvGtBqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f38197a1.chunk.js","sourcesContent":["import React from 'react';\n\nexport type Props = {\n  goods: string[];\n  reversed: boolean;\n  sortBy: string | 'default';\n  length: string | number;\n};\n\nexport const GoodsList: React.FC<Props> = ({\n  goods, reversed, sortBy, length,\n}) => {\n  let goodsCopy = [...goods];\n\n  if (length !== 'default') {\n    goodsCopy = goodsCopy.filter((item: string) => item.length <= length);\n  }\n\n  goodsCopy.sort((item1: string, item2: string) => {\n    switch (sortBy) {\n      case 'letters':\n        return item1.localeCompare(item2);\n\n      case 'length':\n        return item1.length - item2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (reversed === true) {\n    goodsCopy.reverse();\n  }\n\n  const goodsItems = goodsCopy.map((item: string) => (\n    <li key={item}>\n      {item}\n    </li>\n  ));\n\n  return (\n    <ul>\n      {goodsItems}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './Components/GoodsList/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [startList, setListVisibility] = useState(false);\n  const [reverseList, setListOrder] = useState(false);\n  const [sortBy, setSortMethod] = useState('default');\n  const [length, setLength] = useState('default');\n\n  const showList = () => {\n    setListVisibility(current => !current);\n  };\n\n  const makeListReversed = () => {\n    setListOrder(current => !current);\n  };\n\n  const sortAlphabetically = () => {\n    setSortMethod('letters');\n  };\n\n  const sortByLength = () => {\n    setSortMethod('length');\n  };\n\n  const resetList = () => {\n    setListOrder(false);\n    setSortMethod('default');\n    setLength('default');\n  };\n\n  const filterByLength = (event: {\n    target: { value: any }\n  }) => {\n    setLength(event.target.value);\n  };\n\n  const seletct = (selectSize: number) => {\n    const options = Array(selectSize);\n\n    for (let i = 1; i <= selectSize; i += 1) {\n      options[i - 1] = (\n        <option key={i} value={i}>\n          {i}\n        </option>\n      );\n    }\n\n    return (\n      <select\n        name=\"select\"\n        id=\"select\"\n        onChange={filterByLength}\n      >\n        {options}\n      </select>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!startList\n      && (\n        <button type=\"button\" onClick={showList}>\n          Start\n        </button>\n      )}\n      {startList\n        && (\n          <>\n            <button type=\"button\" onClick={makeListReversed}>\n              Reverse\n            </button>\n            <button type=\"button\" onClick={sortAlphabetically}>\n              Sort alphabetically\n            </button>\n            <button type=\"button\" onClick={sortByLength}>\n              Sort by length\n            </button>\n            <button type=\"button\" onClick={resetList}>\n              reset\n            </button>\n            <form action=\"get\">\n              Filetr by item length:\n              {' '}\n              {seletct(10)}\n            </form>\n            <GoodsList\n              goods={goodsFromServer}\n              reversed={reverseList}\n              sortBy={sortBy}\n              length={length}\n            />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}